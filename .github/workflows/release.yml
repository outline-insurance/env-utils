on:
  push:
    branches:
      - production
  
name: Build and Release env-utils

jobs:
    build_and_test:
        name: build and test
        runs-on: [ubuntu-18.04]
        timeout-minutes: 15

        steps:
        - name: Checkout
          # From: https://github.com/actions/checkout
          uses: actions/checkout@v2
        
        - name: Configure DEV AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
        
        - name: Login to Amazon ECR
          id: login-ecr
          # From: https://github.com/aws-actions/amazon-ecr-login
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build
          id: build 
          env:
            # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions#contexts
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: outline-app-base-slim
            IMAGE_TAG: latest
            GIT_SHA: ${{ github.sha }}
          run: |
            # need to make sure that we package the node modules with the lambdas
            echo "installing package"
            go install .
            echo "package installed"

            echo "building for debian-based release"
            export DIRECTORY=$(pwd)
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker run -v $DIRECTORY:/volume $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG /bin/bash /volume/build-entrypoint.sh
            echo "finished building for debian-based release"

            export TAG=$( echo $GIT_SHA | cut -c 1-8 )
            export VERSION=$(cat version.txt)

            echo "::set-output name=tag::$VERSION-$TAG"
        
        - name: Production Binary Release
          if: github.ref == 'refs/heads/production'
          # From: https://github.com/marketplace/actions/automatic-releases
          uses: "marvinpinto/action-automatic-releases@latest"
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: ${{ steps.build.outputs.tag }}
            prerelease: false 
            title: ${{ steps.build.outputs.tag }}
            files: |
              env-utils
